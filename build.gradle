import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
	id 'maven-publish'
	id 'com.gradleup.shadow' version '8.3.5'
}

rootProject.ext.mavenUserName=""
rootProject.ext.mavenPassword=""

if (file("./build.gradle.local").exists()) {
    apply from: "./build.gradle.local"
}

group 'org.hurricanegames'
version '3.0-SNAPSHOT'

java.sourceCompatibility = JavaVersion.VERSION_21
java.targetCompatibility = JavaVersion.VERSION_21

repositories {
	mavenLocal()
	mavenCentral()
    maven {
        url 'https://repo.not-null.co.uk/snapshots/'
    }
	maven {
		url 'https://repo.papermc.io/repository/maven-public/'
	}
}

dependencies {
	compileOnly 'io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT'
    compileOnly messagesHelperDependency
}

task processSource(type: Sync) {
    from sourceSets.main.java
    filter(ReplaceTokens, tokens: [('messagesHelperDependency'): messagesHelperDependency])
    into "${layout.buildDirectory.get()}/src"
}

tasks {
    shadowJar {
        String relocatePrefix = group + "." + rootProject.name.toLowerCase() + ".zlibs."
        archiveClassifier.set('')
    }

    build {
        dependsOn(shadowJar)
    }

    processResources {
        from("${project.rootDir}/src/main/resources") {
            duplicatesStrategy = DuplicatesStrategy.INCLUDE
            project.properties.findAll().each {
                prop ->
                    if (prop.value != null && prop.value instanceof java.lang.String) {
                        filter(ReplaceTokens, tokens: [(prop.key): prop.value])
                        filter(ReplaceTokens, tokens: [('project.' + prop.key): prop.value])
                    }
            }
        }
    }

    compileJava {
        dependsOn(clean)
        source = processSource.outputs
        options.compilerArgs += ["-Xlint:all", "-Xlint:-processing"]
        options.encoding = 'UTF-8'
    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                description = 'CreativeItemFilter'
                url = 'https://github.com/JLyne/CreativeItemFilter'
                developers {
                    developer {
                        id = 'jim'
                        name = 'James Lyne'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/JLyne/CreativeItemFilter.git'
                    developerConnection = 'scm:git:ssh://github.com/JLyne/CreativeItemFilter.git'
                    url = 'https://github.com/JLyne/CreativeItemFilter'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username = rootProject.ext.mavenUserName
                password = rootProject.ext.mavenPassword
            }
            authentication {
                basic(BasicAuthentication)
            }

            def releasesRepoUrl = "https://repo.not-null.co.uk/releases/" // gradle -Prelease publish
            def snapshotsRepoUrl = "https://repo.not-null.co.uk/snapshots/"
            url = project.hasProperty('release') ? releasesRepoUrl : snapshotsRepoUrl
        }
    }
}